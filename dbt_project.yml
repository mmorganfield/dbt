name: 'warehouse'
version: '1.1.33'
config-version: 2

# This setting configures which "profile" dbt uses for this project.
profile: 'default'

# Paths to files:

model-paths: ["models"]
analysis-paths: ["analysis"]
test-paths: ["tests"]
seed-paths: ["data"]
macro-paths: ["macros"]
snapshot-paths: ["snapshots"]

target-path: "target"  # directory which will store compiled SQL files
clean-targets:         # directories to be removed by `dbt clean`
    - "target"
    - "dbt_modules"


# Models in this project: 

models:
    warehouse: 
        staging:
            +schema: dev_staging
            +materialized: table
            google_calendar:
                stg_google_calendar_dim:
                    +enabled: true
            ebird:
                stg_ebird_obs:
                    +enabled: true
                    +re_data_metrics:
                        table:
                            - row_count
                stg_ebird_hotspots:
                    +enabled: true
                    +materialized: incremental
                    +re_data_metrics:   
                        table:
                            - row_count
            covid:
                stg_county_cases:
                    +enabled: true
                stg_county_mask_use:
                    +enabled: true
                stg_excess_deaths:
                    +enabled: true
        intermediate:
            +schema: dev_intermediate
            +materialized: incremental
            google_calendar:
                int_google_calendar_dim:
                    +enabled: true
            ebird:
                int_ebird_obs:
                    +enabled: true
                    +re_data_monitored: true
                    +re_data_metrics:
                        table:
                            - row_count
            covid: 
                int_county_cases:
                    +enabled: true
                    +re_data_monitored: true
                    +materialized: table
        prod_dw:
            +schema: prod_dw
            +materialized: table
            google_calendar:
                google_calendar_dim:
                    +enabled: true
                    +re_data_monitored: true
                    +re_data_metrics:
                        table:
                            - row_count
            ebird: 
                ebird_obs:
                    +enabled: true
                    +re_data_monitored: true
                    +re_data_metrics:
                        table:
                            - row_count
            covid:
                county_cases:
                    enabled: true
                    +re_data_monitored: true
                    +re_data_metrics:
                        table:
                            - row_count


# Packages applied to this project:

packages:
  - package: dbt-labs/dbt_external_tables
    version: 0.8.0
  - package: re_data/re_data
    version: 0.9.2
        

vars:
  # (optional) if not passed, stats for last day will be computed
  re_data:time_window_start: '{{ (run_started_at - modules.datetime.timedelta(1)).strftime("%Y-%m-%d 00:00:00") }}'
  re_data:time_window_end: '{{ run_started_at.strftime("%Y-%m-%d 00:00:00") }}'

  # (optional) override standard metrics computed for all your tables
  re_data:metrics_base:
    table:
      - row_count
      - freshness
      
    column:
      numeric:
        - min
        - max
        - avg
        - stddev
        - variance
        - nulls_count
        - diff # my own custom metric
        
      text:
        - min_length
        - max_length
        - avg_length
        - nulls_count
        - missing_count

  # (optional) tells how much hisory you want to consider when looking for anomalies
  re_data:anomaly_detection_look_back_days: 30